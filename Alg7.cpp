#include <iostream>
using namespace std;
const int N = 5;
int mas[10][N][N] =
{
	{
		{0, 1, 1, 0, 0}, //derevo
		{1, 0, 1, 1, 0},
		{1, 1, 0, 0, 0},
		{0, 1, 0, 0, 0},
		{0, 0, 0, 0, 0}
	},
	{
		{0, 1, 0, 1, 0}, //derevo
		{1, 0, 1, 1, 0},
		{0, 1, 0, 0, 0},
		{1, 1, 0, 0, 0},
		{0, 0, 0, 0, 0}
	},
	{
		{0, 1, 0, 0, 1}, //derevo
		{1, 0, 1, 1, 0},
		{0, 1, 0, 0, 0},
		{0, 1, 0, 0, 0},
		{1, 0, 0, 0, 0}
	},
	{
		{0, 1, 0, 1, 0}, //derevo
		{1, 0, 1, 0, 1},
		{0, 1, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{0, 1, 0, 0, 0}
	},
	{
		{0, 1, 0, 1, 0}, //derevo
		{1, 0, 1, 0, 0},
		{0, 1, 0, 0, 1},
		{1, 0, 0, 0, 0},
		{0, 0, 1, 0, 0}
	},
	{
		{0, 1, 0, 1, 0}, // ne derevo
		{1, 0, 1, 1, 1},
		{0, 1, 0, 0, 0},
		{1, 1, 0, 0, 0},
		{0, 1, 0, 0, 0}
	},
	{
		{0, 1, 0, 1, 0}, // ne derevo
		{1, 0, 1, 1, 0},
		{0, 1, 0, 0, 1},
		{1, 1, 0, 0, 0},
		{0, 0, 1, 0, 0}
	},
	{
		{0, 1, 0, 1, 0}, // ne derevo
		{1, 0, 1, 1, 0},
		{0, 1, 0, 1, 0},
		{1, 1, 1, 0, 0},
		{0, 0, 0, 0, 0}
	},
	{
		{0, 1, 0, 1, 0}, // ne derevo
		{1, 0, 1, 1, 0},
		{0, 1, 0, 0, 0},
		{1, 1, 0, 0, 1},
		{0, 0, 0, 1, 0}
	},
	{
		{0, 1, 0, 1, 1}, // ne derevo
		{1, 0, 1, 1, 0},
		{0, 1, 0, 0, 0},
		{1, 1, 0, 0, 0},
		{1, 0, 0, 0, 0}
	},
};
int numOfEdges(int l) {
	int k = 0;
	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			if (mas[l][i][j] == 1)
				k++;
	return k / 2;
}
int main() {
	for (int l = 0; l < 10; l++) {
		if (N - numOfEdges(l) == 1)
			cout << "Derevo" << endl;
		else
			cout << "Ne Derevo" << endl;
	}
	return 0;
}